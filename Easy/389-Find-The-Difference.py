# Two strings s and t consist of only lowercase English letters.
# String t is generated by random shuffling string s and 
# then add one more letter at a random position.

# Task: Find the letter that was added in t.


# =======================================
# 1) Using Counter() aka hashmaps
# =======================================


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:

    		s_hmap = Counter(s)
		t_hmap = Counter(t)

		for c in t:
			if c not in s_hmap:
				return c
			if s_hmap[c] < t_hmap[c]:
				return c


# =======================================
# 2) Using arrays
# =======================================

		s_sum, t_sum = 0, 0

		for c in s:
			s_sum += ord(c)
		for c in t:
			t_sum += ord(c)

		diff = t_sum - s_sum
		return chr(diff)


# =======================================
# 3) Using bit manipulation (XOR)
# =======================================

# the same values will cancel each other out
# leaving our extra element

		res = 0

		for c in s:
			res = res ^ ord(c)
		for c in t:
			res = res ^ ord(c)

		return chr(res)


# =======================================
# 4) One-line solution
# =======================================


		return chr(sum([ord(c) for c in t]) - sum([ord(c) for c in s]))
